# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GYtnZnDwj9WyTiwl85PUEdpm_Ve2Clcg
"""

from google.colab import files
uploaded = files.upload()

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Display plots inside notebook
# %matplotlib inline

# Load CSV (with encoding fix)
df = pd.read_csv("data.xls", encoding='ISO-8859-1')
df.head()

df = df.dropna(subset=["CustomerID"])

# Remove negative quantity (returns/cancellations)
df = df[df["Quantity"] > 0]

# Convert InvoiceDate to datetime
df["InvoiceDate"] = pd.to_datetime(df["InvoiceDate"])

# Create additional columns
df["TotalPrice"] = df["Quantity"] * df["UnitPrice"]
df["Month"] = df["InvoiceDate"].dt.to_period("M")  # for monthly analysis

df.head()

monthly_revenue = df.groupby("Month")["TotalPrice"].sum()

plt.figure(figsize=(12,6))
monthly_revenue.plot(marker='o')
plt.title("Monthly Revenue Trend")
plt.xlabel("Month")
plt.ylabel("Total Revenue")
plt.grid(True)
plt.tight_layout()
plt.show()

top_countries = df.groupby("Country")["TotalPrice"].sum().sort_values(ascending=False).head(10)

plt.figure(figsize=(10,6))
sns.barplot(x=top_countries.values, y=top_countries.index)
plt.title("Top 10 Countries by Revenue")
plt.xlabel("Revenue")
plt.ylabel("Country")
plt.tight_layout()
plt.show()

top_products = df.groupby("Description")["TotalPrice"].sum().sort_values(ascending=False).head(10)

plt.figure(figsize=(10,6))
sns.barplot(x=top_products.values, y=top_products.index)
plt.title("Top 10 Products by Revenue")
plt.xlabel("Revenue")
plt.ylabel("Product")
plt.tight_layout()
plt.show()

df.columns

df.columns = df.columns.str.strip().str.lower().str.replace(' ', '_')

df.columns.tolist()

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(8,6))
sns.heatmap(df[["totalprice", "unitprice", "quantity"]].corr(), annot=True, cmap="YlGnBu")
plt.title("Correlation Heatmap: Total Price, Unit Price & Quantity")
plt.tight_layout()
plt.show()

top_countries = df["country"].value_counts().head(5)

plt.figure(figsize=(6,6))
plt.pie(top_countries, labels=top_countries.index, autopct='%1.1f%%', startangle=90)
plt.title("Top 5 Countries by Number of Orders")
plt.axis('equal')
plt.tight_layout()
plt.show()

plt.figure(figsize=(10,6))
sns.boxplot(x=df["unitprice"])
plt.title("Boxplot of Unit Price")
plt.xlabel("Unit Price")
plt.tight_layout()
plt.show()

plt.figure(figsize=(10,6))
sns.histplot(df["totalprice"], bins=30, kde=True, color='orange')
plt.title("Distribution of Total Order Value")
plt.xlabel("Total Price")
plt.ylabel("Frequency")
plt.tight_layout()
plt.show()

plt.figure(figsize=(10,6))
sns.scatterplot(x="quantity", y="unitprice", data=df, alpha=0.6)
plt.title("Quantity vs Unit Price")
plt.xlabel("Quantity")
plt.ylabel("Unit Price")
plt.tight_layout()
plt.show()